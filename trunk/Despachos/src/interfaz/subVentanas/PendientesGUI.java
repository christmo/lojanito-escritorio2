/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PendientesGUI.java
 *
 * Created on 16/12/2010, 12:10:43 PM
 */
package interfaz.subVentanas;

import BaseDatos.ConexionBase;
import interfaz.Principal;
import interfaz.funcionesUtilidad;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;

/**
 *
 * @author kradac
 */
public class PendientesGUI extends javax.swing.JFrame {

    private ConexionBase bd;
    private ArrayList<Pendientes> listaPendientes = new ArrayList<Pendientes>();
    private static DefaultTableModel dtm;
    private static Clientes cliente;
    private Icon ic;

    /** Creates new form PendientesGUI */
    public PendientesGUI() {
        initComponents();
    }

    public PendientesGUI(ConexionBase cb) {
        initComponents();
        this.bd = cb;
        this.setVisible(true);
        configuracionInicial();
    }

    private void configuracionInicial() {
        this.setIconImage(new ImageIcon(getClass().getResource("/interfaz/iconos/kradac_icono.png")).getImage());
        inicializarCamposTiempo();
        cargarPendientes();
    }

    /**
     * Pone por defecto los campos de las fechas y de la hora con los tiempos
     * actuales
     */
    private void inicializarCamposTiempo() {
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        Calendar c = GregorianCalendar.getInstance();
        fecha_ini.setDate(c.getTime());
        fecha_ini.setFormats(formato);
        fecha_fin.setDate(c.getTime());
        fecha_fin.setFormats(formato);

        JFormattedTextField textField = ((JSpinner.DefaultEditor) hora.getEditor()).getTextField();
        DefaultFormatterFactory dff = (DefaultFormatterFactory) textField.getFormatterFactory();
        DateFormatter formatter = (DateFormatter) dff.getDefaultFormatter();
        formatter.setFormat(new SimpleDateFormat("HH:mm"));

        hora.setValue((new GregorianCalendar()).getTime());
    }

    /**
     * Carga con datos de la base la tabla de pendientes
     */
    private void cargarPendientes() {
        limpiarTablaPendientes();
//        try {
        listaPendientes = bd.obtenerPendientesGuardados();
        dtm = (DefaultTableModel) jtPendientes.getModel();

        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.CENTER);
        //tcr.setForeground(Color.red);
        for (int i = 0; i < 5; i++) {
            jtPendientes.getColumnModel().getColumn(i).setCellRenderer(tcr);
        }

        DefaultTableCellRenderer tcr2 = new DefaultTableCellRenderer();
        tcr2.setHorizontalAlignment(SwingConstants.LEFT);
        jtPendientes.getColumnModel().getColumn(5).setCellRenderer(tcr2);
        jtPendientes.getColumnModel().getColumn(6).setCellRenderer(tcr2);

        String codigo = "";

        for (int i = listaPendientes.size() - 1; i >= 0; i--) {

            try {
                codigo = listaPendientes.get(i).getCliente().getCodigo();
            } catch (NullPointerException ex) {
                codigo = "0";
            }

            String[] datos = {
                codigo,
                listaPendientes.get(i).getFechaIni(),
                listaPendientes.get(i).getFechaFin(),
                listaPendientes.get(i).getHora(),
                "" + listaPendientes.get(i).getMinRecuerdo(),
                listaPendientes.get(i).getCuandoRecordar(),
                listaPendientes.get(i).getNota()
            };
            dtm.insertRow(0, datos);
        }
//        } catch (NullPointerException nex) {
//        }
        Principal.listaPendientesFecha = bd.obtenerPendientesGuardadosPorFecha(funcionesUtilidad.fechaActual());
        System.err.println("Recargar pendientes");
    }

    /**
     * Limpia la tabla de pendientes
     */
    private void limpiarTablaPendientes() {
        try {
            listaPendientes.clear();
            dtm = (DefaultTableModel) jtPendientes.getModel();
            int n_filas = jtPendientes.getRowCount();
            for (int i = 0; i < n_filas; i++) {
                dtm.removeRow(0);
            }
        } catch (NullPointerException ex) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtTelefono = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtNota = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        fecha_ini = new org.jdesktop.swingx.JXDatePicker();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fecha_fin = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        hora = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jcRecordarTiempo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jtMinRecordar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPendientes = new javax.swing.JTable();
        jbSalir = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pendientes de Despacho");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Información del cliente"));

        jLabel1.setText("Codigo:");

        jtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtCodigo.setToolTipText("Ingresar el codigo del cliente a buscar...");
        jtCodigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtCodigoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtCodigoFocusLost(evt);
            }
        });
        jtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCodigoKeyPressed(evt);
            }
        });

        jLabel4.setText("Teléfono:");

        jtTelefono.setEditable(false);
        jtTelefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jtNombre.setEditable(false);

        jLabel2.setText("Nombre:");

        jLabel5.setText("Nota:");

        jtNota.setColumns(20);
        jtNota.setLineWrap(true);
        jtNota.setRows(2);
        jtNota.setTabSize(0);
        jtNota.setText("PENDIENTE:\t ");
        jtNota.setMargin(new java.awt.Insets(3, 3, 3, 3));
        jtNota.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtNotaFocusLost(evt);
            }
        });
        jtNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNotaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtNota);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Información de pendiente"));

        fecha_ini.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel3.setText("Fecha Inicial:");

        jLabel6.setText("Fecha Final:");

        fecha_fin.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fecha_finPropertyChange(evt);
            }
        });

        jLabel7.setText("Hora:");

        hora.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));

        jLabel8.setText("Días:");

        jcRecordarTiempo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lunes - Domingo", "Lunes - Viernes" }));

        jLabel9.setText("Recordar:");

        jtMinRecordar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtMinRecordar.setText("1");
        jtMinRecordar.setToolTipText("Tiempo en minutos antes para que muestre un mensaje de recordatorio...");
        jtMinRecordar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtMinRecordarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha_ini, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtMinRecordar, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(fecha_fin, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                            .addComponent(hora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jcRecordarTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fecha_ini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fecha_fin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtMinRecordar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcRecordarTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtPendientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Fecha Ini", "Fecha Fin", "Hora", "Min Antes", "Recordar", "Nota"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPendientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtPendientes.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jtPendientes);
        jtPendientes.getColumnModel().getColumn(0).setResizable(false);
        jtPendientes.getColumnModel().getColumn(1).setResizable(false);
        jtPendientes.getColumnModel().getColumn(2).setResizable(false);
        jtPendientes.getColumnModel().getColumn(3).setResizable(false);
        jtPendientes.getColumnModel().getColumn(4).setResizable(false);
        jtPendientes.getColumnModel().getColumn(5).setMinWidth(100);
        jtPendientes.getColumnModel().getColumn(5).setMaxWidth(100);
        jtPendientes.getColumnModel().getColumn(6).setResizable(false);
        jtPendientes.getColumnModel().getColumn(6).setPreferredWidth(300);

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/iconos/salir.png"))); // NOI18N
        jbSalir.setText("Cerrar");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/iconos/eliminar.png"))); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/iconos/buscar.png"))); // NOI18N
        jbBuscar.setText("Buscar Cliente");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaz/iconos/guardar.png"))); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jbSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 469, Short.MAX_VALUE)
                        .addComponent(jbEliminar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbGuardar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbBuscar)
                            .addComponent(jbGuardar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-709)/2, (screenSize.height-480)/2, 709, 480);
    }// </editor-fold>//GEN-END:initComponents

    /*
     * Ventana de consultar los clientes por nombre
     */
    private ConsultaClientes vCliente;

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        if ((vCliente == null) || (!vCliente.isDisplayable())) {
            vCliente = new ConsultaClientes(bd, "pendientes");
            vCliente.setLocationRelativeTo(this);
            vCliente.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            vCliente.setResizable(false);
        }
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCodigoKeyPressed
        if (evt.getKeyCode() == 10) {
            llenarCampos();
        }
    }//GEN-LAST:event_jtCodigoKeyPressed

    private void jtCodigoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCodigoFocusLost
        llenarCampos();
    }//GEN-LAST:event_jtCodigoFocusLost

    private void jtCodigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtCodigoFocusGained
        jtCodigo.setText("");
    }//GEN-LAST:event_jtCodigoFocusGained

    private void jtNotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNotaFocusLost
        jtNota.setText(jtNota.getText().toUpperCase());
    }//GEN-LAST:event_jtNotaFocusLost

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if (!jtNombre.getText().equals("")) {
            if (!jtCodigo.getText().equals("0")) {
                Pendientes pendiente = new Pendientes();
                pendiente.setCliente(cliente);
                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                pendiente.setFechaIni(formato.format(fecha_ini.getDate()));
                pendiente.setFechaFin(formato.format(fecha_fin.getDate()));
                SimpleDateFormat formatoHora = new SimpleDateFormat("HH:mm");
                pendiente.setHora(formatoHora.format(((Date) hora.getValue())));
                pendiente.setCuandoRecordar(jcRecordarTiempo.getSelectedItem().toString());
                pendiente.setEstado("AC");
                try {
                    pendiente.setMinRecuerdo(Integer.parseInt(jtMinRecordar.getText()));
                } catch (NumberFormatException ex) {
                    pendiente.setMinRecuerdo(0);
                }
                pendiente.setNota(jtNota.getText());
                if (!bd.guardarPendientes(pendiente)) {
                    ic = new ImageIcon(getClass().getResource("/interfaz/iconos/error.png"));
                    JOptionPane.showMessageDialog(this,
                            "No se pudo guardar la pendiente, revisar si ya está ingresada...",
                            "Error...", JOptionPane.ERROR_MESSAGE, ic);
                }
                cargarPendientes();
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "No se puede poner un despacho pendiente a un cliente que tiene codigo cero (0)...", "Error...", 0);
                limpiarCampos();
            }
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtMinRecordarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtMinRecordarFocusLost
        try {
            Integer.parseInt(jtMinRecordar.getText());
        } catch (NumberFormatException ex) {
        }
    }//GEN-LAST:event_jtMinRecordarFocusLost

    private void jtNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNotaKeyPressed
        if (evt.getKeyCode() == 9) {
            fecha_ini.requestFocus();
        }
    }//GEN-LAST:event_jtNotaKeyPressed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int fila = jtPendientes.getSelectedRow();
        eliminarPendiente(fila);
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void fecha_finPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fecha_finPropertyChange
        Date fi = fecha_ini.getDate();
        Date ff = fecha_fin.getDate();
        try {
            if (fi.getTime() > ff.getTime()) {
                fecha_fin.setDate(fi);
            }
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_fecha_finPropertyChange

    private void eliminarPendiente(int fila) {
        String cod = jtPendientes.getValueAt(fila, 0).toString();
        String fecIni = jtPendientes.getValueAt(fila, 1).toString();
        String fecFin = jtPendientes.getValueAt(fila, 2).toString();
        String horaPend = jtPendientes.getValueAt(fila, 3).toString();

        boolean result = bd.eliminarPendiente(cod, fecIni, fecFin, horaPend);
        if (result) {
            listaPendientes.remove(fila);
            dtm = (DefaultTableModel) jtPendientes.getModel();
            dtm.removeRow(fila);
        } else {
            ic = new ImageIcon(getClass().getResource("/interfaz/iconos/error.png"));
            JOptionPane.showMessageDialog(this,
                    "No se pudo eliminar la pendiente...",
                    "Error...", JOptionPane.ERROR_MESSAGE, ic);
        }
        Principal.listaPendientesFecha = bd.obtenerPendientesGuardadosPorFecha(funcionesUtilidad.fechaActual());
    }

    /**
     * Permite llenar los campos con los datos del cliente a partir del codigo
     * ingresado
     */
    private void llenarCampos() {
        try {
            int codigo = Integer.parseInt(jtCodigo.getText());
            try {
                setCliente(bd.obtenerCliente(codigo));
                jtNombre.setText(getCliente().getNombre());
                jtTelefono.setText(getCliente().getTelefono());
                jtNota.requestFocus();
            } catch (NullPointerException ex) {
                limpiarCampos();
            }
        } catch (NumberFormatException ex) {
            limpiarCampos();
        }
    }

    /**
     * Limpia todos los campos para una nueva consulta
     */
    private void limpiarCampos() {
        jtCodigo.setText("");
        jtNombre.setText("");
        jtTelefono.setText("");
        jtNota.setText("PENDIENTE: ");
        jtMinRecordar.setText("1");
        inicializarCamposTiempo();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker fecha_fin;
    private org.jdesktop.swingx.JXDatePicker fecha_ini;
    private javax.swing.JSpinner hora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox jcRecordarTiempo;
    private static javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtMinRecordar;
    private static javax.swing.JTextField jtNombre;
    private static javax.swing.JTextArea jtNota;
    private javax.swing.JTable jtPendientes;
    private static javax.swing.JTextField jtTelefono;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the cliente
     */
    public Clientes getCliente() {
        return cliente;
    }

    /**
     * @param cliente the cliente to set
     */
    public static void setCliente(Clientes c) {
        cliente = c;
        jtCodigo.setText(c.getCodigo());
        jtNombre.setText(c.getNombre());
        jtTelefono.setText(c.getTelefono());
        jtNota.requestFocus();
    }
}
